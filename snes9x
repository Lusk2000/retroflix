<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Demo RetroArch Web Player</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Estilos básicos para centralizar a demo -->
    <style>
      body {
        margin: 0;
        background-color: #000;
        color: #fff;
        font-family: Arial, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
      }
      /* Canvas onde o jogo será renderizado */
      #canvas {
        border: 2px solid #fff;
      }
      /* Mensagem que aparece após a demo encerrar */
      #demo-message {
        display: none;
        margin-top: 20px;
        font-size: 24px;
      }
    </style>
  </head>
  <body>
    <!-- Canvas para o emulador -->
    <canvas id="canvas" tabindex="1" width="640" height="480"></canvas>
    <!-- Mensagem exibida após 1 minuto -->
    <div id="demo-message">Demo finalizada. Cadastre-se para jogar mais!</div>
    
    <!-- Inclua o script principal do RetroArch Web Player -->
    <script src="libretro.js"></script>
    <script>
      // Ao carregar a página, configuramos os parâmetros e iniciamos a demo
      window.addEventListener('load', function() {
        // Definindo os parâmetros padrão para auto carregamento:
        // - Core: "snes9x" (será resolvido para os arquivos js/wasm corretos)
        // - ROM: URL RAW da ROM do Super Mario World hospedada no GitHub
        var core = "snes9x";
        var rom = "https://raw.githubusercontent.com/Lusk2000/retroflix/main/Super%20Mario%20World%20(U)%20[!].smc";
        
        // Se não houver query parameters na URL, os configuramos para auto-load
        if (!window.location.search) {
          window.history.replaceState({}, '', '?core=' + encodeURIComponent(core) + '&rom=' + encodeURIComponent(rom));
        }
        
        // Se o botão "Run" existir (na interface original do RetroArch Web Player), simulamos um clique para iniciar
        // Caso contrário, pode ser necessário chamar diretamente a função de inicialização, se disponível.
        setTimeout(function() {
          var btnRun = document.getElementById('btnRun');
          if (btnRun) {
            btnRun.click();
          }
        }, 500); // Delay para garantir que a interface esteja carregada
        
        // Limita a execução da demo a 1 minuto (60000 ms)
        setTimeout(function() {
          // Se existir uma função para encerrar ou resetar o emulador, chamamos ela.
          // Aqui usamos "RetroArch.exit()" como exemplo; ajuste conforme a API disponível.
          if (typeof RetroArch !== 'undefined' && RetroArch.exit) {
            RetroArch.exit();
          }
          // Esconde o canvas e exibe a mensagem da demo finalizada.
          document.getElementById('canvas').style.display = 'none';
          document.getElementById('demo-message').style.display = 'block';
        }, 60000);
      });
    </script>
  </body>
</html>
